{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","getSeason","lat","month","SeasonDisplay","props","season","Date","getMonth","className","Spinner","message","defaultProps","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","renderContent","React","Component","ReactDOM","render","document","querySelector"],"mappings":"+LAiBMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,uBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,oBACNC,SAAU,eAIRE,EAAY,SAACC,EAAKC,GACtB,OAAGA,EAAQ,GAAKA,EAAQ,EACfD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAKjBE,EAnCO,SAACC,GACrB,IAAMC,EAASL,EAAUI,EAAMH,KAAK,IAAIK,MAAOC,YADhB,EAELZ,EAAaU,GAAhCR,EAFwB,EAExBA,KAAMC,EAFkB,EAElBA,SAEb,OACE,yBAAKU,UAAS,yBAAoBH,IAClC,uBAAGG,UAAS,4BAAuBV,EAAvB,WACZ,4BAAKD,GACL,uBAAGW,UAAS,6BAAwBV,EAAxB,aCRVW,EAAU,SAACL,GACf,OACE,yBAAKI,UAAU,oBACb,yBAAKA,UAAU,sBAAsBJ,EAAMM,WAKjDD,EAAQE,aAAe,CACrBD,QAAQ,kBAGKD,QCRTG,E,4MACJC,MAAQ,CAACZ,IAAK,KAAMa,aAAc,I,kEAEb,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAACnB,IAAKkB,EAASE,OAAOC,cAChD,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAACN,aAAcS,EAAIb,e,sCAK1C,OAAGc,KAAKX,MAAMC,eAAiBU,KAAKX,MAAMZ,IACjC,uCAAauB,KAAKX,MAAMC,eAE7BU,KAAKX,MAAMC,cAAgBU,KAAKX,MAAMZ,IACjC,kBAAC,EAAD,CAAeA,IAAKuB,KAAKX,MAAMZ,MAGjC,kBAAC,EAAD,Q,+BAIP,OAAO,yBAAKO,UAAU,cAAcgB,KAAKC,qB,GAtB3BC,IAAMC,WA0BxBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,cAAc,W","file":"static/js/main.67c05aca.chunk.js","sourcesContent":["import React from 'react';\nimport './SeasonDisplay.css'\nconst SeasonDisplay = (props) => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const {text, iconName } = seasonConfig[season];\n\n  return (\n    <div className={`season-display ${season}`}>\n    <i className={`icon-left massive ${iconName} icon`} />\n    <h1>{text}</h1>\n    <i className={`icon-right massive ${iconName} icon`} />\n    </div>\n    );\n\n    \n};\n\nconst seasonConfig = {\n  summer: {\n    text: \"Let's hit the beach!\",\n    iconName: 'sun'\n  },\n  winter: {\n    text: \"Burr, it is cold!\",\n    iconName: 'snowflake'\n  }\n};\n\nconst getSeason = (lat, month) =>  {\n  if(month > 2 && month < 9){\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    return lat > 0 ? 'winter' : 'summer';\n  }\n}\n\n\nexport default SeasonDisplay;","import React from 'react';\n\nconst Spinner = (props) => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui big text loader\">{props.message}</div>\n    </div>\n  );\n};\n\nSpinner.defaultProps = {\n  message:'Now loading...'\n}\n\nexport default Spinner;","// import\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n  state = {lat: null, errorMessage: '' };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({lat: position.coords.latitude}),\n      err => this.setState({errorMessage: err.message })\n    );\n  }\n\n  renderContent() {\n    if(this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>;\n    }\n    if(!this.state.errorMessage && this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat}/>;\n    }\n\n    return <Spinner />;\n  }\n  \n  render() {\n    return <div className=\"border red\">{this.renderContent()}</div>;\n  }\n}\n\nReactDOM.render(<App/>, document.querySelector('#root'));"],"sourceRoot":""}